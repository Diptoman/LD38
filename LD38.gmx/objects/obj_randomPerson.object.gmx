<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_male_default</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_initNPCSprite(0);

_type = 1;
_moveSpd = .9 + random(.2);
_distanceRange = 128;
_initPos = x;

_state = 0;
_type = 1; //Normal, normal, panicking
alarm[0] = 1;

image_speed = .1;

alarm[2] = 120 + floor(random(60));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[2] = 200 + floor(random(120));

if (obj_control._bubbles &lt; obj_control._maxBubbles)
{
    if (obj_control._day == 1)
    {
        scr_showBubble(choose(spr_symbol_food, spr_symbol_drink, spr_symbol_sleep), id, 120+floor(random(90)));
    }
    else if (obj_control._day == 2)
    {
        if (_type == 1)
        {
            if (obj_control._step != 2)
            {
                scr_showBubble(choose(spr_symbol_food, spr_symbol_drink, spr_symbol_sleep), id, 120+floor(random(90)));
            }
        }
        else if ((_type == 2) || (_type == 3))
        {
            scr_showBubble(choose(spr_symbol_doom, spr_symbol_question), id, 120+floor(random(90)));
        }
        else if (_type == 4)
        {
            scr_showBubble(choose(spr_symbol_doom, spr_symbol_cross), id, 120+floor(random(90)));
        }
    }
    else if (obj_control._day == 5)
    {
        scr_showBubble(choose(spr_symbol_doom, spr_symbol_question), id, 120+floor(random(90)));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 60 + floor(random(90));
_state = floor(random(4));

switch(_state)
{
        case 2:
        _direction = 1;
        scr_setNPCSprite("running");
        break;
        
        case 3:
        _direction = -1;
        scr_setNPCSprite("running");
        break;
        
        default:
        _direction = 0;
        scr_setNPCSprite("standing");
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 60 + floor(random(90));
_state = floor(random(4));

switch(_state)
{
        case 2:
        _direction = 1;
        scr_setNPCSprite("walking");
        break;
        
        case 3:
        _direction = -1;
        scr_setNPCSprite("walking");
        break;
        
        default:
        _direction = 0;
        scr_setNPCSprite("standing");
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Day 1
if (obj_control._day == 1)
{
    if (x &lt; _initPos - _distanceRange)
    {
        _direction = 1;
    }
    else if (x &gt; _initPos + _distanceRange)
    {
        _direction = -1;
    }
    
    if (_state &gt; 1)
    {
        x += _direction * _moveSpd;
        image_xscale = _direction;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Day 2
if (obj_control._day == 2)
{
    if (obj_control._step == 1)
    {    
        if (x &lt; _initPos - _distanceRange)
        {
            _direction = 1;
        }
        else if (x &gt; _initPos + _distanceRange)
        {
            _direction = -1;
        }
    
        if (_state &gt; 1)
        {
            x += _direction * _moveSpd;
            image_xscale = _direction;
        }
    }
    else if (obj_control._step == 2)
    {
        alarm[0] = -1;
        scr_setNPCSprite("standing");
        
        if (x &lt; room_width / 2)
        {   
            _direction = 1;
        }
        else
        {
            _direction = -1;
        }
            
        image_xscale = _direction;
    }
    else if (obj_control._step == 3)
    {
        if (_type == 1)
        {
            _type = 2;
            _initX = x;
            
            if (x &lt; room_width / 2)
            {    
                _xx = room_width / 2 - 200 + floor(random(160));
                _direction = 1;
            }
            else
            {
                _xx = room_width / 2 + 40 + floor(random(160));
                _direction = -1;
            }
            
            image_xscale = _direction;
        }
        
        //Go towards centre
        if (_initX &lt; room_width / 2)
        {
            if (_xx &gt; x)
            {
                x += _moveSpd * 1.5 * _direction;
                scr_setNPCSprite("running");
                image_xscale = _direction;
            }
            else
            {
                scr_setNPCSprite("standing");
            }
        }
        else
        {
            if (_xx &lt; x)
            {
                x += _moveSpd * 1.5 * _direction;
                scr_setNPCSprite("running");
                image_xscale = _direction;
            }
            else
            {
                scr_setNPCSprite("standing");
            }
        }
        
    }
    else if (obj_control._step &gt;= 7)
    {
        if (_type &lt; 3)
        {
            _type = 3 + floor(random(2));
            
            if (_type == 3)
            {
                alarm[0] = 1;
            }
            else
            {
                alarm[1] = 1;
            }
        }
        
        //Walk or run
        if (_type == 3)
        {        
            if (x &lt; _initPos - _distanceRange)
            {
                _direction = 1;
            }
            else if (x &gt; _initPos + _distanceRange)
            {
                _direction = -1;
            }
    
            if (_state &gt; 1)
            {
                x += _direction * _moveSpd;
                image_xscale = _direction;
            }
        }
        
        if (_type == 4)
        {
            if (x &lt; _initPos - _distanceRange)
            {
                _direction = 1;
            }
            else if (x &gt; _initPos + _distanceRange)
            {
                _direction = -1;
            }
    
            if (_state &gt; 1)
            {
                x += _direction * _moveSpd * 1.5;
                image_xscale = _direction;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Day 5
if (obj_control._day == 5)
{
    if ((x &lt; _initPos - _distanceRange) || (x &gt; _initPos + _distanceRange))
    {
        _direction = -_direction;
    }
    
    if (_state &gt; 1)
    {
        x += _direction * _moveSpd;
        image_xscale = _direction;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_place(x, y, obj_machine))
    draw_sprite_ext(spr_charshadow, 0, x, y, image_xscale, image_yscale, image_angle, c_white, image_alpha);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
